{"ast":null,"code":"import _asyncToGenerator from \"N:/Users/ALRI/source/repos/ToDoListApollo/ToDoListApollo/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../liste.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../main/main.component\";\n\nfunction ListeComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\")(1, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ListeComponent_li_9_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const todoliste_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSelect(todoliste_r1));\n    });\n    i0.ɵɵelementStart(2, \"span\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const todoliste_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(todoliste_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todoliste_r1.name);\n  }\n}\n\nconst _c0 = function () {\n  return [\"/creation\"];\n};\n\nexport class ListeComponent {\n  constructor(listeService, http, baseUrl) {\n    this.listeService = listeService;\n    this.liste = [];\n    this.tache = [{\n      id: 1,\n      name: \"eza\",\n      description: \"ezae\",\n      id_l: 2\n    }];\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n\n  ngOnInit() {\n    this.getListe();\n    this.getTACHE();\n  }\n\n  gettache() {\n    this.http.get(this.baseUrl + 'HomeController1').subscribe(result => {\n      this.tache = result;\n    }, error => console.error(error));\n  }\n\n  gettache2() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.tache = yield _this.listeService.gettache();\n    })();\n  }\n\n  getTACHE() {\n    this.listeService.gettache().subscribe(result => {\n      this.tache = result;\n    }, error => console.error(error));\n  } // Obtention de la liste des todolistes depuis le service listeService\n\n\n  getListe() {\n    this.listeService.getListe().subscribe(liste => this.liste = liste);\n  }\n\n  onSelect(todoliste) {\n    this.listeSelectionnee = todoliste;\n    this.tachesListeSelectionnee = todoliste.taches;\n  }\n\n}\n\nListeComponent.ɵfac = function ListeComponent_Factory(t) {\n  return new (t || ListeComponent)(i0.ɵɵdirectiveInject(i1.ListeService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\n\nListeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListeComponent,\n  selectors: [[\"app-liste\"]],\n  decls: 12,\n  vars: 5,\n  consts: [[1, \"bloc_flex\"], [\"id\", \"gauche\"], [\"id\", \"actions\"], [3, \"routerLink\"], [\"id\", \"liste\"], [1, \"liste\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"droite\"], [3, \"todoliste\", \"taches\"], [1, \"bouton_liste\", 3, \"click\"], [1, \"badge\"], [1, \"name\"]],\n  template: function ListeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"button\", 3);\n      i0.ɵɵtext(4, \"Cr\\u00E9er\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"h2\");\n      i0.ɵɵtext(7, \"My Lists \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ul\", 5);\n      i0.ɵɵtemplate(9, ListeComponent_li_9_Template, 6, 2, \"li\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"app-main\", 8);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.liste);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"todoliste\", ctx.listeSelectionnee)(\"taches\", ctx.tachesListeSelectionnee);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.RouterLink, i5.MainComponent],\n  styles: [\".bloc_flex[_ngcontent-%COMP%]\\r\\n{\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n#actions[_ngcontent-%COMP%] {\\r\\n  min-height: 80px;\\r\\n  background-color: gray;\\r\\n}\\r\\n\\r\\n#gauche[_ngcontent-%COMP%]\\r\\n{\\r\\n    flex:none;\\r\\n    min-width: 350px\\r\\n}\\r\\n\\r\\n#droite[_ngcontent-%COMP%]\\r\\n{\\r\\n    flex: auto;\\r\\n}\\r\\n\\r\\nul[_ngcontent-%COMP%]\\r\\n{\\r\\n    list-style: none;\\r\\n    padding-left:0;\\r\\n}\\r\\n\\r\\n.bouton_liste[_ngcontent-%COMP%]\\r\\n{\\r\\n    width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksYUFBYTtBQUNqQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixzQkFBc0I7QUFDeEI7O0FBQ0E7O0lBRUksU0FBUztJQUNUO0FBQ0o7O0FBQ0E7O0lBRUksVUFBVTtBQUNkOztBQUVBOztJQUVJLGdCQUFnQjtJQUNoQixjQUFjO0FBQ2xCOztBQUNBOztJQUVJLFdBQVc7QUFDZiIsImZpbGUiOiJsaXN0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJsb2NfZmxleFxyXG57XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4jYWN0aW9ucyB7XHJcbiAgbWluLWhlaWdodDogODBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG59XHJcbiNnYXVjaGVcclxue1xyXG4gICAgZmxleDpub25lO1xyXG4gICAgbWluLXdpZHRoOiAzNTBweFxyXG59XHJcbiNkcm9pdGVcclxue1xyXG4gICAgZmxleDogYXV0bztcclxufVxyXG5cclxudWxcclxue1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmctbGVmdDowO1xyXG59XHJcbi5ib3V0b25fbGlzdGVcclxue1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;IASQA,2BAAoC,CAApC,EAAoC,QAApC,EAAoC,CAApC;IACUA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAT;IAA4B,CAA5B;IACNA;IAAoBA;IAAgBA;IACpCA;IAAmBA;IAAkBA;;;;;IADjBA;IAAAA;IACDA;IAAAA;;;;;;;;ACE/B,OAAM,MAAOC,cAAP,CAAqB;EAUzBC,YAAoBC,YAApB,EAAgDC,IAAhD,EAAsFC,OAAtF,EAAqG;IAAjF;IATpB,aAAqB,EAArB;IACO,aAAiB,CAAC;MAACC,EAAE,EAAC,CAAJ;MAAMC,IAAI,EAAC,KAAX;MAAiBC,WAAW,EAAC,MAA7B;MAAoCC,IAAI,EAAC;IAAzC,CAAD,CAAjB;IASL,KAAKL,IAAL,GAAYA,IAAZ;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;;EAEDK,QAAQ;IACN,KAAKC,QAAL;IACA,KAAKC,QAAL;EACD;;EACDC,QAAQ;IACN,KAAKT,IAAL,CAAUU,GAAV,CAAuB,KAAKT,OAAL,GAAe,iBAAtC,EAAyDU,SAAzD,CAAmEC,MAAM,IAAG;MAC1E,KAAKC,KAAL,GAAaD,MAAb;IACD,CAFD,EAEGE,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAFZ;EAGD;;EAEKE,SAAS;IAAA;;IAAA;MACb,KAAI,CAACH,KAAL,SAAmB,KAAI,CAACd,YAAL,CAAkBU,QAAlB,EAAnB;IADa;EAEd;;EAEDD,QAAQ;IACN,KAAKT,YAAL,CAAkBU,QAAlB,GAA6BE,SAA7B,CAAuCC,MAAM,IAAG;MAC9C,KAAKC,KAAL,GAAaD,MAAb;IACD,CAFD,EAEGE,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAFZ;EAGD,CAjCwB,CAkCzB;;;EACAP,QAAQ;IACN,KAAKR,YAAL,CAAkBQ,QAAlB,GAA6BI,SAA7B,CAAuCM,KAAK,IAAI,KAAKA,KAAL,GAAaA,KAA7D;EACD;;EACDC,QAAQ,CAACC,SAAD,EAAqB;IAC3B,KAAKC,iBAAL,GAAyBD,SAAzB;IACA,KAAKE,uBAAL,GAA+BF,SAAS,CAACG,MAAzC;EACD;;AAzCwB;;;mBAAdzB,gBAAcD,iGAUiD,UAVjD;AAU2D;;;QAVzEC;EAAc0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDd3B/B,+BAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,QAAvB,EAAuB,CAAvB;MAG2CA;MAAKA;MAG5CA,+BAAgB,CAAhB,EAAgB,IAAhB;MACMA;MAASA;MACbA;MACEA;MAMFA;MAIJA;MACEA;MACFA;;;;MAlBYA;MAAAA;MAMoBA;MAAAA;MAWpBA;MAAAA,kDAAgC,QAAhC,EAAgCgC,2BAAhC","names":["i0","ListeComponent","constructor","listeService","http","baseUrl","id","name","description","id_l","ngOnInit","getListe","getTACHE","gettache","get","subscribe","result","tache","error","console","gettache2","liste","onSelect","todoliste","listeSelectionnee","tachesListeSelectionnee","taches","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["N:\\Users\\ALRI\\source\\repos\\ToDoListApollo\\ToDoListApollo\\ClientApp\\src\\app\\liste\\liste.component.html","N:\\Users\\ALRI\\source\\repos\\ToDoListApollo\\ToDoListApollo\\ClientApp\\src\\app\\liste\\liste.component.ts"],"sourcesContent":["<div class=\"bloc_flex\">\r\n  <div id=\"gauche\">\r\n    <div id=\"actions\">\r\n      <button [routerLink]=\"['/creation']\">Créer</button>\r\n    </div>\r\n\r\n    <div id=\"liste\">\r\n      <h2>My Lists </h2>\r\n      <ul class=\"liste\">\r\n        <li *ngFor=\"let todoliste of liste\">\r\n          <button (click)=\"onSelect(todoliste)\" class=\"bouton_liste\">\r\n            <span class=\"badge\">{{todoliste.id}}</span>\r\n            <span class=\"name\">{{todoliste.name}}</span>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"droite\">\r\n    <app-main [todoliste] =\"listeSelectionnee\" [taches] =\"tachesListeSelectionnee\"></app-main>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n// Import de nos propres fichiers\r\nimport { Todoliste } from '../list'\r\nimport { ListeService } from '../liste.service';\r\nimport { tache } from '../tache';\r\n\r\n\r\n@Component({\r\n  selector: 'app-liste',\r\n  templateUrl: './liste.component.html',\r\n  styleUrls: ['./liste.component.css']\r\n})\r\n\r\nexport class ListeComponent implements OnInit {\r\n  liste: Todoliste[] = [];\r\n  public tache: tache[] = [{id:1,name:\"eza\",description:\"ezae\",id_l:2}];\r\n  http: HttpClient;\r\n  baseUrl: String;\r\n\r\n  listeSelectionnee?: Todoliste;\r\n  tachesListeSelectionnee?: tache[];\r\n\r\n\r\n  constructor(private listeService: ListeService, http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getListe();\r\n    this.getTACHE();\r\n  }\r\n  gettache(): void {\r\n    this.http.get<tache[]>(this.baseUrl + 'HomeController1').subscribe(result => {\r\n      this.tache = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  async gettache2() {\r\n    this.tache = await this.listeService.gettache();\r\n  }\r\n\r\n  getTACHE(): void {\r\n    this.listeService.gettache().subscribe(result => {\r\n      this.tache = result;\r\n    }, error => console.error(error));\r\n  }\r\n  // Obtention de la liste des todolistes depuis le service listeService\r\n  getListe(): void {\r\n    this.listeService.getListe().subscribe(liste => this.liste = liste);\r\n  }\r\n  onSelect(todoliste: Todoliste): void {\r\n    this.listeSelectionnee = todoliste;\r\n    this.tachesListeSelectionnee = todoliste.taches;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}